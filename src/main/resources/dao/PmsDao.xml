<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.redis.dao.PmsDao">
  <resultMap id="BaseResultMap" type="com.example.redis.bean.Pms">
    <id column="pms_id" jdbcType="INTEGER" property="id" />
    <result column="pms_category" jdbcType="VARCHAR" property="category" />
    <result column="pms_name" jdbcType="VARCHAR" property="name" />
    <result column="pms_parent" jdbcType="INTEGER" property="parent" />
    <result column="pms_org" jdbcType="INTEGER" property="org" />
    <result column="pms_time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pms.id as pms_id, pms.category as pms_category, pms.`name` as `pms_name`, pms.parent as pms_parent, 
    pms.org as pms_org, pms.`time` as `pms_time`
  </sql>
  <select id="selectByExample" parameterType="com.example.redis.bean.PmsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pms pms
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pms pms
    where pms.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pms
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.redis.bean.PmsExample">
    delete from pms pms
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.redis.bean.Pms" useGeneratedKeys="true">
    insert into pms (category, `name`, parent, 
      org, `time`)
    values (#{category,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{parent,jdbcType=INTEGER}, 
      #{org,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.redis.bean.Pms" useGeneratedKeys="true">
    insert into pms
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="category != null">
        category,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="parent != null">
        parent,
      </if>
      <if test="org != null">
        org,
      </if>
      <if test="time != null">
        `time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parent != null">
        #{parent,jdbcType=INTEGER},
      </if>
      <if test="org != null">
        #{org,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.redis.bean.PmsExample" resultType="java.lang.Long">
    select count(*) from pms pms
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pms pms
    <set>
      <if test="record.id != null">
        pms.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.category != null">
        pms.category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        pms.`name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.parent != null">
        pms.parent = #{record.parent,jdbcType=INTEGER},
      </if>
      <if test="record.org != null">
        pms.org = #{record.org,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        pms.`time` = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pms pms
    set pms.id = #{record.id,jdbcType=INTEGER},
      pms.category = #{record.category,jdbcType=VARCHAR},
      pms.`name` = #{record.name,jdbcType=VARCHAR},
      pms.parent = #{record.parent,jdbcType=INTEGER},
      pms.org = #{record.org,jdbcType=INTEGER},
      pms.`time` = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.redis.bean.Pms">
    update pms
    <set>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parent != null">
        parent = #{parent,jdbcType=INTEGER},
      </if>
      <if test="org != null">
        org = #{org,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.redis.bean.Pms">
    update pms
    set category = #{category,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      parent = #{parent,jdbcType=INTEGER},
      org = #{org,jdbcType=INTEGER},
      `time` = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>